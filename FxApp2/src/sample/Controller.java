package sample;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;


public class Controller {

    @FXML
    Button btn1;
    @FXML
    Button btn2;
    @FXML
    Button btn3;
    @FXML
    Button btn4;
    @FXML
    Button btn5;

    @FXML
    TextArea text1;
    @FXML
    TextField text2;
    @FXML
    TextArea text3;
    @FXML
    TextField text4;

    public void btn_generate(ActionEvent event){
        String text_hash =text1.getText();
        String text_hashed = getMd5(text_hash);
        System.out.println("Your HashCode Generated by MD5 is: " + getMd5(text_hashed));
        text2.setText(text_hashed);


    }

    public void btn_copy(ActionEvent event){
        String text_copied = text1.getText();
        text3.setText(text_copied);
    }

    public void btn_generate2(ActionEvent event){
        String text_hash =text3.getText();
        String text_hashed = getMd5(text_hash);
        System.out.println("Your HashCode Generated by MD5 is: " + getMd5(text_hashed));
        text4.setText(text_hashed);
    }

    public void btn_verify(ActionEvent event){
        if(text2.getText().equals(text4.getText())){
            System.out.println("l'integrité est vérifié !");
        } else
            System.out.println("L'intégité n'est pas vérifiée !");

    }


    public void btn_end(ActionEvent event){
        text1.setText("");
        text2.setText("");
        text3.setText("");
        text4.setText("");
    }

    public static String getMd5(String input)
    {
        try {

            // Static getInstance method is called with hashing MD5
            MessageDigest md = MessageDigest.getInstance("MD5");

            // digest() method is called to calculate message digest
            //  of an input digest() return array of byte
            byte[] messageDigest = md.digest(input.getBytes());

            // Convert byte array into signum representation
            BigInteger no = new BigInteger(1, messageDigest);

            // Convert message digest into hex value
            String hashtext = no.toString(16);
            while (hashtext.length() < 32) {
                hashtext = "0" + hashtext;
            }
            return hashtext;
        }
        // For specifying wrong message digest algorithms
        catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }
}
